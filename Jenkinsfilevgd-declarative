
pipeline{

//agent any 

agent{
label "nodes"
}

parameters {
  choice choices: ['development', 'master ', 'qa', 'uat'], description: 'select BranchName', name: 'BranchName'
}


tools{
maven "maven3.8.5"
}

triggers {
  pollSCM ('* * * * *')
  //cron ('* * * * *')
}

options {
  timestamps ()
}



stages{
   //Get the code from GitHub
   stage('CheckoutCode'){
   steps{
       slacknotifications('STARTED')
   git branch: "${params.BranchName}", credentialsId: 'd097f92f-7e85-4f01-b4b0-b71de9fc6f95', url: 'https://github.com/vgd-may-batch2022/maven-web-application.git'
   }
   }

   //Do the build
   stage('Build'){
   steps{
   sh "mvn clean package"
   }
   }
   
   //Execute SonarQube Report
   stage('ExecuteSonarQubeReport'){
   steps{
   sh "mvn sonar:sonar"
   }
   }
   
   //Upload ArtifactInto Nexus Reop
   stage('UploadArtifactIntoNexus'){
   steps{
   sh "mvn deploy"
   }
   }
   
   //Deploy Application into Tomcat Server
   stage('DeployAppIntoTomcatServer'){
   steps{       
   sshagent(['6d9cc06f-cdfe-47c0-a68e-6981326c78c4']){
   sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.108.62.51:/opt/apache-tomcat-9.0.64/webapps/"
   }
   }
   }
   
}//stages closing

post {
  success {
    slacknotifications(currentBuild.result)
  }
  failure {
    slacknotifications(currentBuild.result)
  }
} 

}//pipeline closing 

def slacknotifications(String buildStatus = 'STARTED') {

buildStatus =  buildStatus ?: 'SUCCESS'

// Default values
def colorName = 'RED'
def colorCode = '#FF0000'
def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
def summary = "${subject} (${env.BUILD_URL})"

//Override default values based on build status
if (buildStatus == 'STARTED') {
  color = 'ORANGE'
  colorCode = '#FFA500'
} else if (buildStatus == 'SUCCESS') {
  color = 'GREEN'
  colorCode = '#00FF00'
} else {
  color = 'RED'
  colorCode = '#FF0000'
}

// Send notifications
slackSend (color: colorCode, message: summary)
}
