node('nodes')
{

def mavenHome = tool name: "maven3.8.5"

properties([[$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

echo "The Job name is: ${env.JOB_NAME}"
echo "The node name is: ${env.NODE_NAME}"
echo "The workspace path is: ${env.WORKSPACE}"
echo "The node label is: ${env.NODE_LABELS}"
echo "The build number is: ${env.BUILD_NUMBER}"

try{
slacknotifications("STARTED")

stage('CheckoutCode'){
git branch: 'development', credentialsId: 'd097f92f-7e85-4f01-b4b0-b71de9fc6f95', url: 'https://github.com/vgd-may-batch2022/maven-web-application.git'
}

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
  
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}
 
stage('UploadArtifactIntoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

stage('DeployAppIntoTomcatServer'){
sshagent(['6d9cc06f-cdfe-47c0-a68e-6981326c78c4']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.43.13:/opt/apache-tomcat-9.0.64/webapps/"
}
}

}
catch(e){
currentBuild.result = 'FAILED'
throw e
}
finally{
slacknotifications(currentBuild.result) 
}


}// Node Closing

def slacknotifications(String buildStatus = 'STARTED') {

buildStatus =  buildStatus ?: 'SUCCESS'

// Default values
def colorName = 'RED'
def colorCode = '#FF0000'
def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
def summary = "${subject} (${env.BUILD_URL})"

//Override default values based on build status
if (buildStatus == 'STARTED') {
  color = 'ORANGE'
  colorCode = '#FFA500'
} else if (buildStatus == 'SUCCESS') {
  color = 'GREEN'
  colorCode = '#00FF00'
} else {
  color = 'RED'
  colorCode = '#FF0000'
}

// Send notifications
slackSend (color: colorCode, message: summary)
}
